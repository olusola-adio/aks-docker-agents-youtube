# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  branches:
    include:
    - master

resources:
  - repo: self

variables:
  # this keyvault variable group is where your PAT Token will come from. Store your PAT Token there as a secret called "AzurePatToken"
- group: KeyVault - Youtube  
- template: VariableTemplates\DevEnvironmentVariables.yml  

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(ubuntuImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(AzureDevOpsAgentTag) 
    - upload: manifests
      artifact: manifests
      
- stage: DeployDockerBuidAgentStage
  displayName: Deploy Docker Buid Agents Stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployDockerBuidAgentJob
    condition: succeeded()
    displayName: Deploy Docker Buid Agents Job
    pool:
      vmImage:  $(windowsImageName) 
    environment: $(Environment)
    strategy:
      runOnce:
        deploy:
          steps:    
          # Tokenize the manifest file
          - task: Tokenization@2            
            displayName: 'Tokenization: transform file mon-devops-aks-agent.yml'
            inputs:
              SourcePath: $(Pipeline.Workspace)/manifests/
              TargetFileNames: mon-devops-aks-agent.yml
                            
          # Create PAT token secret in aks
          - task: Kubernetes@1
            displayName: kubectl create pat token secret
            inputs:
              useClusterAdmin: true
              namespace: 'dev'
              secretType: generic
              secretArguments: --from-literal=pattokensecret=$(AzurePatToken)
              secretName: mon-azuredevops-pat-token
              forceUpdate: true
          
          # Deploy to aks
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/manifests/mon-devops-aks-agent.yml
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)

          # Delete Tokenised file
          - task: DeleteFiles@1
            displayName: 'Delete tokenised file'
            inputs:
              SourceFolder: $(Pipeline.Workspace)/manifests/
              Contents: mon-devops-aks-agent.yml

  - job: BashJob
    dependsOn: DeployDockerBuidAgentJob
    condition: succeeded()
    pool:
      name: $(DockerPoolName)
    steps:
    - bash: 'ls -l /data'
      displayName: 'Bash Script: Run jMeter Test'
      workingDirectory: $(Agent.TempDirectory)
    - bash: 'rm -rf /data'
      displayName: 'Bash Script: Run jMeter Test'
      workingDirectory: $(Agent.TempDirectory)
    - bash: 'pwd'
      displayName: 'Bash Script: Run jMeter Test'
      workingDirectory: $(Agent.TempDirectory)